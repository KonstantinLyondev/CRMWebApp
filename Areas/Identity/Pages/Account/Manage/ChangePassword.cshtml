@page
@model ChangePasswordModel
@{
    ViewData["Title"] = "Change password";
    ViewData["ActivePage"] = ManageNavPages.ChangePassword;
}

<div class="card shadow p-4 mt-4">
    <h3 class="mb-4 text-center">🔐 Change your password</h3>

    @* *@
    @{
        string? pwdOk = TempData["ManagePassword.Success"] as string;
        string? pwdErr = TempData["ManagePassword.Error"] as string;
    }
    @if (!string.IsNullOrWhiteSpace(pwdOk))
    {
        <div id="pwdAlert" class="alert alert-success alert-dismissible fade show mb-3" role="alert">
            @pwdOk
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(pwdErr))
    {
        <div id="pwdAlert" class="alert alert-danger alert-dismissible fade show mb-3" role="alert">
            @pwdErr
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form id="change-password-form" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-2" role="alert"></div>

        <div class="mb-3">
            <label asp-for="Input.OldPassword" class="form-label">Current password</label>
            <div class="input-group">
                <input asp-for="Input.OldPassword" class="form-control" type="password" id="Input_OldPassword" />
                <span class="input-group-text toggle-password" data-target="Input_OldPassword">
                    <i class="bi bi-eye"></i>
                </span>
            </div>
            <span asp-validation-for="Input.OldPassword" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Input.NewPassword" class="form-label">New password</label>
            <div class="input-group">
                <input asp-for="Input.NewPassword" class="form-control" type="password" id="Input_NewPassword" />
                <span class="input-group-text toggle-password" data-target="Input_NewPassword">
                    <i class="bi bi-eye"></i>
                </span>
            </div>
            <small class="text-muted">
                Minimum 6, maximum 50 characters. Must include at least one uppercase letter, one digit and one special character.
            </small>
            <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Input.ConfirmPassword" class="form-label">Confirm new password</label>
            <div class="input-group">
                <input asp-for="Input.ConfirmPassword" class="form-control" type="password" id="Input_ConfirmPassword" />
                <span class="input-group-text toggle-password" data-target="Input_ConfirmPassword">
                    <i class="bi bi-eye"></i>
                </span>
            </div>
            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary w-100">Update password</button>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.getAttribute('data-target');
                const input = document.getElementById(id);
                const icon = this.querySelector('i');
                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('bi-eye');
                    icon.classList.add('bi-eye-slash');
                } else {
                    input.type = 'password';
                    icon.classList.remove('bi-eye-slash');
                    icon.classList.add('bi-eye');
                }
            });
        });

        const p = document.getElementById("pwdAlert");
        if (p) {
            setTimeout(() => {
                p.classList.remove("show");
                p.addEventListener("transitionend", () => p.remove(), { once: true });
            }, 4000);
        }
    </script>
}
